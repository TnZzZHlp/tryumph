name: CI

on:
    push:
        branches: [main]
        paths:
            - "src/**"
    pull_request:
        branches: [main]
        paths:
            - "src/**"
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        name: Test
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                rust: [stable]
                features:
                    [
                        "",
                        "--features random",
                        "--features unsync",
                        "--features random,unsync",
                        "--all-features",
                    ]

        steps:
            - uses: actions/checkout@v3

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  toolchain: ${{ matrix.rust }}

            - name: Cache dependencies
              uses: Swatinem/rust-cache@v2

            - name: Test
              run: cargo test ${{ matrix.features }}

    clippy:
        name: Clippy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Install Rust with clippy
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: clippy

            - name: Cache dependencies
              uses: Swatinem/rust-cache@v2

            - name: Run clippy
              run: cargo clippy --all-features -- -D warnings

    formatting:
        name: Formatting
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Install Rust with rustfmt
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt

            - name: Check formatting
              run: cargo fmt --all -- --check

    doc:
        name: Documentation
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Cache dependencies
              uses: Swatinem/rust-cache@v2

            - name: Check documentation
              env:
                  RUSTDOCFLAGS: -D warnings
              run: cargo doc --all-features --no-deps

    coverage:
        name: Code coverage
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: llvm-tools-preview

            - name: Install cargo-llvm-cov
              uses: taiki-e/install-action@cargo-llvm-cov

            - name: Generate code coverage
              run: cargo llvm-cov --all-features --lcov --output-path lcov.info

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  files: lcov.info
                  fail_ci_if_error: false
